/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package servercaro;

import Connection.DataProvider;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author hieu
 */
public class ManageTournament extends javax.swing.JFrame {

    /**
     * Creates new form ManageTournament
     */
    public ManageTournament() {
        initComponents();
        ListAllUser();
        ShowAllUser();
    }
    private void ListAllUser(){
         try {           
            String query = "Select TENGIAIDAU From TOURNAMENT";  
            DataProvider a = new DataProvider();
            Connection b = a.getConnection();
            PreparedStatement pst = b.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            
            if(rs !=  null){
               while(rs.next()){
                   String tengiaidau = rs.getString(1).toString();
                   //String username = rs.getString(2).toString();
                   jcomboGiaiDau.addItem(tengiaidau);
               }
            }
            else{
                JOptionPane.showMessageDialog(null , "Can not access database");
            }
            b.close();
        } catch (SQLException ex) {
            Logger.getLogger(UserInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcomboGiaiDau = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistUser = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jcomboAddUser = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Choose Tournament");

        jcomboGiaiDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboGiaiDauActionPerformed(evt);
            }
        });

        jlistUser.setColumns(20);
        jlistUser.setRows(5);
        jScrollPane1.setViewportView(jlistUser);

        jLabel2.setText("All User");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jcomboGiaiDau, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jcomboAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomboGiaiDau, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcomboAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void ShowAllUser(){
        try {
            String query2 = "Select UserName From [USER]";   
            DataProvider a = new DataProvider();
            Connection b = a.getConnection();
            PreparedStatement pst = b.prepareStatement(query2);
            ResultSet rs = pst.executeQuery();
           
               while(rs.next()){                       
                   String username = rs.getString(1).toString();
                   jcomboAddUser.addItem(username);
               }
               b.close();
        } catch (SQLException ex) {
            Logger.getLogger(ManageTournament.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jcomboGiaiDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboGiaiDauActionPerformed
        try {
            String tengiaidau = jcomboGiaiDau.getSelectedItem().toString();
             String query = "Select ut.UserName From USER_TOURNAMENT ut,TOURNAMENT t Where t.MAGIAIDAU = ut.MAGIAIDAU and t.TENGIAIDAU = '" +tengiaidau + "'" ;  
            
                DataProvider a = new DataProvider();
                Connection b = a.getConnection();
                PreparedStatement pst = b.prepareStatement(query);
                ResultSet rs = pst.executeQuery();
                String setUser = "Danh Sach Users thuoc giai '" + tengiaidau + "' : " + "\n";
                if(rs !=  null){
                   while(rs.next()){                       
                       String username = rs.getString(1).toString();
                       setUser += "\t";
                       setUser += username;
                       setUser += "\n";
                      
                   }
                   jlistUser.setText(setUser);
                    
                }
                else{
                    JOptionPane.showMessageDialog(null , "Can not access database");
                }
                b.close();
        } catch (SQLException ex) {
            Logger.getLogger(ManageTournament.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcomboGiaiDauActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            String user = jcomboAddUser.getSelectedItem().toString();
            String tengiaidau = jcomboGiaiDau.getSelectedItem().toString();
            String query2 = "Select MAGIAIDAU From TOURNAMENT Where TENGIAIDAU = '" + tengiaidau + "'"; 
            
            
                DataProvider a = new DataProvider();
                Connection b = a.getConnection();
                PreparedStatement pst = b.prepareStatement(query2);
                ResultSet rs = pst.executeQuery();
                String magiaidau = "";
                while(rs.next()){
                     magiaidau = rs.getString(1).toString();
                }
                String query3 = "Select Count(*) From USER_TOURNAMENT Where UserName = '" + user + "' and MAGIAIDAU = '" + magiaidau + "'";
                pst = b.prepareStatement(query3);
                 rs = pst.executeQuery();  
                 int count = 0;
                 while(rs.next()){
                     String temp = rs.getString(1).toString();
                     count = Integer.parseInt(temp);
                }
                 if(count == 1){
                     JOptionPane.showMessageDialog(null , "User này đã tồn tại trong giải đấu"); 
                 }
                 else{
                            String query = "Insert into USER_TOURNAMENT values('"+user+"','"+magiaidau+"')";  
                        pst = b.prepareStatement(query);
                        int ketqua = pst.executeUpdate();
                       if(ketqua ==  1){
                          JOptionPane.showMessageDialog(null , "Insert Successfully"); 
                          ListAllUser();
                       }
                       else{
                           JOptionPane.showMessageDialog(null , "Can not access database");
                       }
                 }
                
                b.close();
        } catch (SQLException ex) {
            Logger.getLogger(ManageTournament.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ManageTournament().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcomboAddUser;
    private javax.swing.JComboBox jcomboGiaiDau;
    private javax.swing.JTextArea jlistUser;
    // End of variables declaration//GEN-END:variables
}
